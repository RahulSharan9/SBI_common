import os
import pandas as pd

# >>> EDIT THIS <<<
# Only these columns will be consolidated
list_of_columns = ["A", "X", "Y"]

# base folder where quarter subfolders exist
base_dir = "output_folder"

all_rows = []

# Walk through all quarter folders
for quarter in os.listdir(base_dir):
    quarter_path = os.path.join(base_dir, quarter)
    if not os.path.isdir(quarter_path):
        continue

    data_quality_path = os.path.join(quarter_path, "data_quality")
    if not os.path.isdir(data_quality_path):
        continue

    # Look for possible value_counts CSVs
    for fname in os.listdir(data_quality_path):
        if fname.endswith(".csv") and "value" in fname.lower():
            fpath = os.path.join(data_quality_path, fname)

            df = pd.read_csv(fpath)

            # normalize column names
            df.columns = df.columns.str.strip().str.lower()

            required_cols = {"value", "count", "file", "column"}
            if not required_cols.issubset(df.columns):
                continue

            # <<< FILTER APPLIED HERE >>>
            df = df[df["column"].isin(list_of_columns)]

            if df.empty:
                continue

            # segment extraction from filename
            df["segment"] = df["file"].str.extract(r"(seg\d+)", expand=False).str.upper()

            # add quarter metadata
            df["quarter"] = quarter

            all_rows.append(df)

# Combine outputs
if all_rows:
    final_df = pd.concat(all_rows, ignore_index=True)
    final_df = final_df[["quarter", "segment", "column", "value", "count", "file"]]

    final_df.to_csv("consolidated_value_counts.csv", index=False)
    print("✅ Summary generated: consolidated_value_counts.csv")

else:
    print("⚠️ No matching rows found for your selected columns.")
